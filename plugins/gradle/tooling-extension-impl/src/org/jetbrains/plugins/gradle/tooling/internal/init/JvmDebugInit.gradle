// Copyright 2000-2024 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.
//file:noinspection GrPackage

import com.intellij.gradle.toolingExtension.impl.initScript.util.GradleJvmForkedDebuggerHelper
import com.intellij.gradle.toolingExtension.impl.initScript.util.GradleLifecycleUtil
import com.intellij.gradle.toolingExtension.impl.initScript.util.GradleTasksUtil
import com.intellij.gradle.toolingExtension.impl.util.collectionUtil.GradleCollectionUtil

def debugAllIsEnabled = Boolean.valueOf(System.getProperty("idea.gradle.debug.all"))
logger.debug("idea.gradle.debug.all is {}", debugAllIsEnabled)

GradleLifecycleUtil.afterProject(gradle) { Project project ->
  def projectDirectory = project.projectDir.path
  def tasks = debugAllIsEnabled ? project.tasks : GradleTasksUtil.getStartTasks(project)
  GradleCollectionUtil.configureEach(tasks) { Task task ->
    if (task instanceof JavaForkOptions) {
      task.doFirst {
        GradleJvmForkedDebuggerHelper.setupDebugger(delegate, projectDirectory)
      }
      task.doLast {
        GradleJvmForkedDebuggerHelper.signalizeFinish(delegate)
      }
    }
  }
}
