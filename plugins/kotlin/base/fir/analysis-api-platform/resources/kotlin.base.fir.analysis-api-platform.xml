<idea-plugin package="org.jetbrains.kotlin.idea.base.fir.analysisApiPlatform">

  <extensions defaultExtensionNs="com.intellij">
    <projectService
            serviceInterface="org.jetbrains.kotlin.analysis.api.platform.KotlinModificationTrackerFactory"
            serviceImplementation="org.jetbrains.kotlin.idea.base.fir.analysisApiPlatform.FirIdeKotlinModificationTrackerFactory"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.analysis.api.platform.KotlinGlobalModificationService"
            serviceImplementation="org.jetbrains.kotlin.idea.base.fir.analysisApiPlatform.FirIdeKotlinGlobalModificationService"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.analysis.api.platform.KotlinDirectInheritorsProvider"
            serviceImplementation="org.jetbrains.kotlin.idea.base.fir.analysisApiPlatform.FirIdeKotlinDirectInheritorsProvider"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.analysis.api.platform.KotlinForwardDeclarationProviderFactory"
            serviceImplementation="org.jetbrains.kotlin.idea.base.fir.analysisApiPlatform.FirIdeForwardDeclarationProviderFactory"/>
    <projectService
            serviceInterface="org.jetbrains.kotlin.analysis.api.platform.KotlinForwardDeclarationsPackageProviderFactory"
            serviceImplementation="org.jetbrains.kotlin.idea.base.fir.analysisApiPlatform.FirIdeForwardDeclarationPackageProviderFactory"/>

    <psi.treeChangePreprocessor
            implementation="org.jetbrains.kotlin.idea.base.fir.analysisApiPlatform.FirIdeOutOfBlockPsiTreeChangePreprocessor"/>
  </extensions>

  <projectListeners>
    <listener class="org.jetbrains.kotlin.idea.base.fir.analysisApiPlatform.FirIdeModuleStateModificationService$SingleFileModuleModificationListener"
              topic="com.intellij.openapi.vfs.newvfs.BulkFileListener"/>
    <listener class="org.jetbrains.kotlin.idea.base.fir.analysisApiPlatform.FirIdeModuleStateModificationService$LibraryUpdatesListener"
              topic="com.intellij.openapi.vfs.newvfs.BulkFileListener"/>
    <listener class="org.jetbrains.kotlin.idea.base.fir.analysisApiPlatform.FirIdeModuleStateModificationService$NonWorkspaceModuleRootListener"
              topic="com.intellij.openapi.roots.ModuleRootListener"/>
    <listener class="org.jetbrains.kotlin.idea.base.fir.analysisApiPlatform.FirIdeModuleStateModificationService$FileDocumentListener"
              topic="com.intellij.openapi.fileEditor.FileDocumentManagerListener"/>
    <listener class="org.jetbrains.kotlin.idea.base.fir.analysisApiPlatform.FirIdeModuleStateModificationService$MyDynamicPluginListener"
              topic="com.intellij.ide.plugins.DynamicPluginListener"/>
    <listener class="org.jetbrains.kotlin.idea.base.fir.analysisApiPlatform.FirIdeModuleStateModificationService$SdkChangeListener"
              topic="com.intellij.platform.backend.workspace.WorkspaceModelChangeListener"/>
  </projectListeners>

  <dependencies>
    <module name="kotlin.base.analysis-api-platform"/>
    <module name="kotlin.searching.k2"/>
  </dependencies>

</idea-plugin>