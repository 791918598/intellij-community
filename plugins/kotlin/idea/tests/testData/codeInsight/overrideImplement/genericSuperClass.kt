// FIR_IDENTICAL
abstract class X : java.util.ArrayList<String>(), Runnable {
    <caret>
}

// MEMBER: "add(element: String): Boolean"
// MEMBER: "add(index: Int, element: String): Unit"
// MEMBER: "addAll(elements: Collection<String>): Boolean"
// MEMBER: "addAll(index: Int, elements: Collection<String>): Boolean"
// MEMBER: "clear(): Unit"
// MEMBER: "iterator(): MutableIterator<String>"
// MEMBER: "remove(element: String): Boolean"
// MEMBER: "removeAll(elements: Collection<String>): Boolean"
// MEMBER: "retainAll(elements: Collection<String>): Boolean"
// MEMBER: "contains(element: String): Boolean"
// MEMBER: "containsAll(elements: Collection<String!>): Boolean"
// MEMBER: "isEmpty(): Boolean"
// MEMBER: "equals(other: Any?): Boolean"
// MEMBER: "hashCode(): Int"
// MEMBER: "toString(): String"
// MEMBER: "forEach(p0: Consumer<in String!>!): Unit"
// MEMBER: "spliterator(): Spliterator<String!>"
// MEMBER: "toArray(): Array<(out) Any!>!"
// MEMBER: "toArray(p0: Array<(out) T!>!): Array<(out) T!>!"
// MEMBER: "removeIf(p0: Predicate<in String>): Boolean"
// MEMBER: "stream(): Stream<String!>"
// MEMBER: "parallelStream(): Stream<String!>"
// MEMBER: "listIterator(index: Int): MutableListIterator<String>"
// MEMBER: "listIterator(): MutableListIterator<String>"
// MEMBER: "removeAt(p0: Int): String"
// MEMBER: "set(index: Int, element: String): String"
// MEMBER: "subList(fromIndex: Int, toIndex: Int): MutableList<String>"
// MEMBER: "get(index: Int): String"
// MEMBER: "indexOf(element: String): Int"
// MEMBER: "lastIndexOf(element: String): Int"
// MEMBER: "replaceAll(p0: UnaryOperator<String>): Unit"
// MEMBER: "sort(p0: Comparator<in String!>!): Unit"
// MEMBER: "removeRange(p0: Int, p1: Int): Unit"
// MEMBER: "clone(): Any"
// MEMBER: "trimToSize(): Unit"
// MEMBER: "ensureCapacity(p0: Int): Unit"
// MEMBER: "size: Int"
// MEMBER: "run(): Unit"