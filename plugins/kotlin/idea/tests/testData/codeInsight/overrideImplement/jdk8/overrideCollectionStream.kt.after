// FIR_IDENTICAL
import java.util.stream.Stream

abstract class A : List<String> {
    override fun stream(): Stream<String> {
        return super.stream()
    }
}

// MEMBER: "size: Int"
// MEMBER: "contains(element: String): Boolean"
// MEMBER: "containsAll(elements: Collection<String>): Boolean"
// MEMBER: "equals(other: Any?): Boolean"
// MEMBER: "forEach(action: Consumer<in String!>!): Unit"
// MEMBER: "get(index: Int): String"
// MEMBER: "hashCode(): Int"
// MEMBER: "indexOf(element: String): Int"
// MEMBER: "isEmpty(): Boolean"
// MEMBER: "iterator(): Iterator<String>"
// MEMBER: "lastIndexOf(element: String): Int"
// MEMBER: "listIterator(): ListIterator<String>"
// MEMBER: "listIterator(index: Int): ListIterator<String>"
// MEMBER: "parallelStream(): Stream<String>"
// MEMBER: "spliterator(): Spliterator<String!>"
// MEMBER: "stream(): Stream<String>"
// MEMBER: "subList(fromIndex: Int, toIndex: Int): List<String>"
// MEMBER: "toArray(generator: IntFunction<Array<(out) T!>!>!): Array<(out) T!>!"
// MEMBER: "toString(): String"