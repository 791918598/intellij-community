UFile (package = ) [public final class InnerNonFixedTypeVariableKt {...]
    UClass (name = InnerNonFixedTypeVariableKt) [public final class InnerNonFixedTypeVariableKt {...}]
        UMethod (name = test) [public static final fun test(@org.jetbrains.annotations.NotNull list: java.util.List<? extends java.lang.Object>) : void {...}]
            UParameter (name = list) [@org.jetbrains.annotations.NotNull var list: java.util.List<? extends java.lang.Object>]
                UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            UBlockExpression [{...}] : <ErrorType>
                UQualifiedReferenceExpression [list.<anonymous class>().<anonymous class>(mutableSetOf(), { ...})] : <ErrorType>
                    UQualifiedReferenceExpression [list.<anonymous class>()] : <ErrorType>
                        USimpleNameReferenceExpression (identifier = list) [list] : java.util.List<? extends java.lang.Object>
                        UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0)) [<anonymous class>()] : <ErrorType>
                            UIdentifier (Identifier (filterIsInstance)) [UIdentifier (Identifier (filterIsInstance))]
                            USimpleNameReferenceExpression (identifier = <anonymous class>, resolvesTo = null) [<anonymous class>] : <ErrorType>
                    UCallExpression (kind = UastCallKind(name='method_call'), argCount = 2)) [<anonymous class>(mutableSetOf(), { ...})] : <ErrorType>
                        UIdentifier (Identifier (mapTo)) [UIdentifier (Identifier (mapTo))]
                        USimpleNameReferenceExpression (identifier = <anonymous class>, resolvesTo = null) [<anonymous class>] : <ErrorType>
                        UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0)) [mutableSetOf()] : <ErrorType>
                            UIdentifier (Identifier (mutableSetOf)) [UIdentifier (Identifier (mutableSetOf))]
                            USimpleNameReferenceExpression (identifier = mutableSetOf, resolvesTo = null) [mutableSetOf] : <ErrorType>
                        ULambdaExpression [{ ...}] : kotlin.jvm.functions.Function0<? extends kotlin.Unit>
                            UBlockExpression [{...}] : kotlin.Unit
    UClass (name = Some) [public final class Some {...}]
        UMethod (name = Some) [public fun Some() = UastEmptyExpression]
