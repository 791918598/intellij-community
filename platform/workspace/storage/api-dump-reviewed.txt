*a:com.intellij.platform.workspace.storage.EntityChange
- a:getNewEntity():com.intellij.platform.workspace.storage.WorkspaceEntity
- a:getOldEntity():com.intellij.platform.workspace.storage.WorkspaceEntity
*f:com.intellij.platform.workspace.storage.EntityChange$Added
- com.intellij.platform.workspace.storage.EntityChange
- <init>(com.intellij.platform.workspace.storage.WorkspaceEntity):V
- f:component1():com.intellij.platform.workspace.storage.WorkspaceEntity
- f:copy(com.intellij.platform.workspace.storage.WorkspaceEntity):com.intellij.platform.workspace.storage.EntityChange$Added
- bs:copy$default(com.intellij.platform.workspace.storage.EntityChange$Added,com.intellij.platform.workspace.storage.WorkspaceEntity,I,java.lang.Object):com.intellij.platform.workspace.storage.EntityChange$Added
- equals(java.lang.Object):Z
- f:getEntity():com.intellij.platform.workspace.storage.WorkspaceEntity
- getNewEntity():com.intellij.platform.workspace.storage.WorkspaceEntity
- getOldEntity():com.intellij.platform.workspace.storage.WorkspaceEntity
- hashCode():I
- toString():java.lang.String
*f:com.intellij.platform.workspace.storage.EntityChange$Removed
- com.intellij.platform.workspace.storage.EntityChange
- <init>(com.intellij.platform.workspace.storage.WorkspaceEntity):V
- f:component1():com.intellij.platform.workspace.storage.WorkspaceEntity
- f:copy(com.intellij.platform.workspace.storage.WorkspaceEntity):com.intellij.platform.workspace.storage.EntityChange$Removed
- bs:copy$default(com.intellij.platform.workspace.storage.EntityChange$Removed,com.intellij.platform.workspace.storage.WorkspaceEntity,I,java.lang.Object):com.intellij.platform.workspace.storage.EntityChange$Removed
- equals(java.lang.Object):Z
- f:getEntity():com.intellij.platform.workspace.storage.WorkspaceEntity
- getNewEntity():com.intellij.platform.workspace.storage.WorkspaceEntity
- getOldEntity():com.intellij.platform.workspace.storage.WorkspaceEntity
- hashCode():I
- toString():java.lang.String
*f:com.intellij.platform.workspace.storage.EntityChange$Replaced
- com.intellij.platform.workspace.storage.EntityChange
- <init>(com.intellij.platform.workspace.storage.WorkspaceEntity,com.intellij.platform.workspace.storage.WorkspaceEntity):V
- f:component1():com.intellij.platform.workspace.storage.WorkspaceEntity
- f:component2():com.intellij.platform.workspace.storage.WorkspaceEntity
- f:copy(com.intellij.platform.workspace.storage.WorkspaceEntity,com.intellij.platform.workspace.storage.WorkspaceEntity):com.intellij.platform.workspace.storage.EntityChange$Replaced
- bs:copy$default(com.intellij.platform.workspace.storage.EntityChange$Replaced,com.intellij.platform.workspace.storage.WorkspaceEntity,com.intellij.platform.workspace.storage.WorkspaceEntity,I,java.lang.Object):com.intellij.platform.workspace.storage.EntityChange$Replaced
- equals(java.lang.Object):Z
- getNewEntity():com.intellij.platform.workspace.storage.WorkspaceEntity
- getOldEntity():com.intellij.platform.workspace.storage.WorkspaceEntity
- hashCode():I
- toString():java.lang.String
*:com.intellij.platform.workspace.storage.EntityPointer
- a:isPointerTo(com.intellij.platform.workspace.storage.WorkspaceEntity):Z
- a:resolve(com.intellij.platform.workspace.storage.EntityStorage):com.intellij.platform.workspace.storage.WorkspaceEntity
*:com.intellij.platform.workspace.storage.EntitySource
- getVirtualFileUrl():com.intellij.platform.workspace.storage.url.VirtualFileUrl
*:com.intellij.platform.workspace.storage.EntityStorage
- a:contains(com.intellij.platform.workspace.storage.SymbolicEntityId):Z
- a:entities(java.lang.Class):kotlin.sequences.Sequence
- a:entitiesBySource(kotlin.jvm.functions.Function1):kotlin.sequences.Sequence
- a:getExternalMapping(com.intellij.platform.workspace.storage.ExternalMappingKey):com.intellij.platform.workspace.storage.ExternalEntityMapping
- a:getVirtualFileUrlIndex():com.intellij.platform.workspace.storage.url.VirtualFileUrlIndex
- a:referrers(com.intellij.platform.workspace.storage.SymbolicEntityId,java.lang.Class):kotlin.sequences.Sequence
- a:resolve(com.intellij.platform.workspace.storage.SymbolicEntityId):com.intellij.platform.workspace.storage.WorkspaceEntityWithSymbolicId
*f:com.intellij.platform.workspace.storage.EntityStorageKt
- sf:toBuilder(com.intellij.platform.workspace.storage.ImmutableEntityStorage):com.intellij.platform.workspace.storage.MutableEntityStorage
*:com.intellij.platform.workspace.storage.EntityStorageSerializer
- a:deserializeCache-IoAF18A(java.nio.file.Path):java.lang.Object
- a:getSerializerDataFormatVersion():java.lang.String
- a:serializeCache(java.nio.file.Path,com.intellij.platform.workspace.storage.ImmutableEntityStorage):com.intellij.platform.workspace.storage.SerializationResult
*a:com.intellij.platform.workspace.storage.EntityType
- <init>():V
- <init>(com.intellij.platform.workspace.storage.EntityType):V
- b:<init>(com.intellij.platform.workspace.storage.EntityType,I,kotlin.jvm.internal.DefaultConstructorMarker):V
- pf:builder():com.intellij.platform.workspace.storage.WorkspaceEntity$Builder
*:com.intellij.platform.workspace.storage.ExternalEntityMapping
- a:forEach(kotlin.jvm.functions.Function2):V
- a:getDataByEntity(com.intellij.platform.workspace.storage.WorkspaceEntity):java.lang.Object
- a:getEntities(java.lang.Object):kotlin.sequences.Sequence
- a:getFirstEntity(java.lang.Object):com.intellij.platform.workspace.storage.WorkspaceEntity
- a:size():I
*f:com.intellij.platform.workspace.storage.ExternalMappingKey
- *sf:Companion:com.intellij.platform.workspace.storage.ExternalMappingKey$Companion
- <init>(java.lang.String):V
- toString():java.lang.String
*f:com.intellij.platform.workspace.storage.ExternalMappingKey$Companion
- f:create(java.lang.String):com.intellij.platform.workspace.storage.ExternalMappingKey
*@:com.intellij.platform.workspace.storage.GeneratedCodeApiVersion
- java.lang.annotation.Annotation
- a:version():I
*@:com.intellij.platform.workspace.storage.GeneratedCodeImplVersion
- java.lang.annotation.Annotation
- a:version():I
